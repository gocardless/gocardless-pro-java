apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
group = ' com.gocardless'
version = '4.8.0'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'ch.raffael.pegdown-doclet:pegdown-doclet:1.2.1'
    }
}

apply plugin: 'ch.raffael.pegdown-doclet'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.google.guava:guava:20.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'commons-codec:commons-codec:1.11'

    compile('com.github.rholder:guava-retrying:2.0.0') {
      exclude group: 'com.google.guava', module: 'guava'
    }

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.6.0'
    testCompile 'com.squareup.okhttp:mockwebserver:2.7.5'
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.noTimestamp = true

    options.links = [
      'http://docs.oracle.com/javase/7/docs/api/'
    ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from tasks.javadoc.destinationDir
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.gocardless'
            artifactId 'gocardless-pro'

            from components.java
            artifacts = [jar, javadocJar, sourcesJar]

            pom {
                name.set('GoCardless Client')
                packaging 'jar'
                description.set('Client library for accessing the GoCardless API')
                url.set('http://developer.gocardless.com/')

                scm {
                    url.set('scm:git@github.com:gocardless/gocardless-pro-java.git')
                    connection.set('scm:git@github.com:gocardless/gocardless-pro-java.git')
                    developerConnection.set('scm:git@github.com:gocardless/gocardless-pro-java.git')
                }

                licenses {
                    license {
                        name.set('MIT')
                        url.set('http://www.opensource.org/licenses/mit-license.php')
                        distribution.set('repo')
                    }
                }

                developers {
                    developer {
                        name.set('GoCardless Ltd')
                        email.set('client-libraries@gocardless.com')
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"

            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}